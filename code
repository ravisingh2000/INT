import random
import string
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import nltk
import numpy as np
import warnings

warnings.filterwarnings('ignore')
GREETING_INPUTS = ["hi","hii", "hello", "hola", "greetings", "wassup", "hey"]
GREETING_RESPONSES = ["howdy", "hi", "hey", "what's good", "hello", "hey there"]

def greeting(sentence):
    for word in sentence.split():
        if word.lower() in GREETING_INPUTS:
            return random.choice(GREETING_RESPONSES)


def response(user_response):

    user_response = user_response.lower()
    robo_response = ''
    sent_tokens.append(user_response)
    TfidfVec = TfidfVectorizer(tokenizer=LemNormalize, stop_words='english')
    tfidf = TfidfVec.fit_transform(sent_tokens)
    vals = cosine_similarity(tfidf[-1], tfidf)
    idx = vals.argsort()[0][-2]
    flat = vals.flatten()
    flat.sort()
    score = flat[-2]

    if (score == 0):
        robo_response = robo_response + "I apologize, I don't understand."
    else:
        robo_response = robo_response + sent_tokens[idx]
    sent_tokens.remove(user_response)
    return robo_response
flag = True
print("I am AI Bot I am here for you to solve the issues regarding Logistics. If you want to exit, type Bye!")
while (flag == True):
    user_response = input()
    user_response = user_response.lower()
    if (user_response != 'bye'):
        if (user_response == 'thanks' or user_response == 'thank you'):
            flag = False
            print("AI Bot: You are welcome !")
        else:
            if (greeting(user_response) != None):
                print("AI Bot: " + greeting(user_response))
            else:
                print("AI Bot: " + response(user_response))
    else:
        flag = False
        print("AI Bot: Chat with you later !")
